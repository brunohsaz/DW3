{% extends "templates/base.html" %}

{% block content %}
  <div x-data="cursoForm()">
    <ol class="breadcrumb mb-2">
      <li class="breadcrumb-item active">{{ title }}</li>
    </ol>
    <div class="row">
      <div class="col-12">

        <div class="card-header">
          {{ title }}
        </div>

        <div class="card-body">
          <div class="">
            <form>
              <div class="row">
                <div class="col-md-3">
                  <div class="form-group">
                    <label for="cursoid">Curso ID</label>
                    <input type="text" class="form-control" id="cursoid" readonly x-model="form.cursoid">
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="form-group">
                    <label for="codigo">Código</label>
                    <input type="text" class="form-control" id="codigo" required="required" x-model="form.codigo" x-bind:disabled="disabled">
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="form-group">
                    <label for="descricao">Descrição</label>
                    <input type="text" class="form-control" id="descricao" x-model="form.descricao" x-bind:disabled="disabled">
                  </div>
                </div>
              </div>

              <div class="form-group col-md-6">
                <label for="ativo">Ativo</label>
                <select class="form-select" id="ativo" x-model="form.ativo" x-bind:disabled="disabled">
                  <option value="true">Sim</option>
                  <option value="false">Não</option>
                </select>
              </div>

              <button type="button" @click="updateForm()" class="btn btn-primary mt-4">Salvar</button>
              <button type="button" @click="deleteForm()" x-show="!disabled" class="btn btn-danger mt-4">Remover</button>
              <a href="/cursos/manutCursos" class="btn btn-info mt-4 ml-2" role="button" aria-disabled="true">Retornar</a>
            </form>

            <div class="mt-3">
              <template x-if="message">
                <div :class="messageClass" x-text="message"></div>
              </template>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>

      window.onload = function () {
        windowOnLoad();

        //@ Caso tenha dado erro no servidor frontEnd, ele será mostrado aqui.
        const localErro = "{{ erro }}";
        if (localErro != "") {
          alert("[vwCursos|onload] Servidor retornou o erro: " + localErro);
        }
        $("#codigo").focus();

      };

      function cursoForm() {
        return {
          form: {
            cursoid: "{{ data.cursoid }}",
            codigo: "{{ data.codigo }}",
            descricao: "{{ data.descricao }}",
            ativo: {{ data.ativo }},
            deleted: false
          },
          message: '',
          messageClass: '',
          disabled: {{ disabled }},

          async updateForm() {
            try {
              const response = await fetch('/cursos/UpdateCursos', {
                method: 'POST',
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify(this.form)
              });

              const result = await response.json();
              if (result.status == "ok") {
                alert("Curso atualizado com sucesso");
              } else {
                const errorData = result.status;
                this.message = `Erro! Não foi possível atualizar os dados do curso devido ao erro: ${errorData}`;
                this.messageClass = 'alert alert-danger';
              }
            } catch (error) {
              this.message = `Erro de conexão: ${error.message}`;
              this.messageClass = 'alert alert-danger';
            }
          },

          async deleteForm() {
            try {
              const response = await fetch('/cursos/DeleteCursos', {
                method: 'POST',
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify(this.form)
              });

              const result = await response.json();
              if (result.status == "ok") {
                alert("Curso removido com sucesso");
                window.location.href = "/cursos/manutCursos";
              } else {
                const errorData = result.status;
                this.message = `Erro! Não foi possível remover os dados do curso devido ao erro: ${errorData}`;
                this.messageClass = 'alert alert-danger';
              }
            } catch (error) {
              this.message = `Erro de conexão: ${error.message}`;
              this.messageClass = 'alert alert-danger';
            }
          },

          resetForm() {
            this.form = {
              cursoid: '{{ data.cursoid }}',  // Preserving cursoid for potential reset
              codigo: '',
              descricao: '',
              ativo: true,
              deleted: false
            };
            this.message = false;
          }
        };
      }
    </script>

  {% endblock %}
